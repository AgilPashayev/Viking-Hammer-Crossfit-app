name: Supabase Deploy

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install supabase CLI (official)
        run: |
          set -e
          sudo apt-get update -y
          sudo apt-get install -y jq ca-certificates curl tar
          TAG=$(curl -s https://api.github.com/repos/supabase/cli/releases/latest | jq -r .tag_name)
          URL="https://github.com/supabase/cli/releases/download/${TAG}/supabase_linux_amd64.tar.gz"
          echo "Downloading $URL"
          curl -sL "$URL" -o supabase.tgz
          ls -l supabase.tgz
          file supabase.tgz || true
          tar -xzf supabase.tgz
          sudo mv supabase /usr/local/bin/supabase
          sudo chmod +x /usr/local/bin/supabase
          supabase --version

      - name: Install PowerShell (pwsh)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y powershell
          pwsh -v || true

      - name: Install psql (postgres client)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y postgresql-client

      - name: Apply migrations, RLS and seeds (psql)
        if: ${{ secrets.SUPABASE_DB_URL != '' }}
        env:
          SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
        run: |
          set -euo pipefail
          echo "Applying migrations using SUPABASE_DB_URL"
          export PGSSLMODE=require
          echo "Running migrations/0001_init.sql"
          psql "${SUPABASE_DB_URL}" -f infra/supabase/migrations/0001_init.sql
          echo "Running RLS policies"
          psql "${SUPABASE_DB_URL}" -f infra/supabase/policies/rls_policies.sql
          echo "Running seeds"
          psql "${SUPABASE_DB_URL}" -f infra/supabase/seeds/seed_initial.sql

      - name: Fallback: run Node SQL runner (when psql not available or as double-check)
        if: ${{ secrets.SUPABASE_DB_URL != '' }}
        env:
          SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
        run: |
          set -euo pipefail
          echo "Installing node deps and running infra/supabase/run_sql.js"
          # already have Node from setup-node above; install pg locally
          npm ci --no-audit --no-fund || npm install pg --no-audit --no-fund
          node infra/supabase/run_sql.js "${SUPABASE_DB_URL}"

      - name: Run supabase deploy script
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
          SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
        run: |
          pwsh -NoLogo -NoProfile -NonInteractive ./infra/supabase/run_deploy_locally.ps1
